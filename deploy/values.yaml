---
fullnameOverride: external-dns-mikrotik

logLevel: debug
policy: sync
sources: ["ingress", "service"]
interval: 1s
txtOwnerId: default
txtPrefix: k8s.
domainFilters: ["example.com"]

provider:
  name: webhook
  webhook:
    image:
      repository: ghcr.io/mirceanton/external-dns-provider-mikrotik
      tag: sha-36f6f8d@sha256:a443bd4e2fb0aa0c1b7cc6ec8be7f6b6ab2937ad29c050e4cd1d7f13117e7fd8
      pullPolicy: Always
    env:
      - name: LOG_FORMAT
        value: json
      - name: LOG_LEVEL
        value: debug
      - name: MIKROTIK_HOST
        valueFrom:
          secretKeyRef:
            name: mikrotik-credentials
            key: MIKROTIK_HOST
      - name: MIKROTIK_PORT
        valueFrom:
          secretKeyRef:
            name: mikrotik-credentials
            key: MIKROTIK_PORT
      - name: MIKROTIK_USERNAME
        valueFrom:
          secretKeyRef:
            name: mikrotik-credentials
            key: MIKROTIK_USERNAME
      - name: MIKROTIK_PASSWORD
        valueFrom:
          secretKeyRef:
            name: mikrotik-credentials
            key: MIKROTIK_PASSWORD
      - name: MIKROTIK_SKIP_TLS_VERIFY
        valueFrom:
          secretKeyRef:
            name: mikrotik-credentials
            key: MIKROTIK_SKIP_TLS_VERIFY

    livenessProbe:
      httpGet:
        path: /healthz
        port: http-wh-metrics
      initialDelaySeconds: 10
      timeoutSeconds: 5
    readinessProbe:
      httpGet:
        path: /readyz
        port: http-wh-metrics
      initialDelaySeconds: 10
      timeoutSeconds: 5

extraArgs:
  - --ignore-ingress-tls-spec
  - --source=crd
  - --crd-source-apiversion=externaldns.k8s.io/v1alpha1
  - --crd-source-kind=DNSEndpoint

rbac:
  create: true
  additionalPermissions:
    - apiGroups: ["externaldns.k8s.io"]
      resources: ["dnsendpoints"]
      verbs: ["get", "watch", "list"]
    - apiGroups: ["externaldns.k8s.io"]
      resources: ["dnsendpoints/status"]
      verbs: ["*"]
